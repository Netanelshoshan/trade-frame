2025/05/18 
https://en.cppreference.com/w/cpp/language/lambda

2014/11/11

pimpl
http://herbsutter.com/gotw/_100/
http://www.gotw.ca/publications/mill05.htm


2013/11/05
http://www.stroustrup.com/lock-free-vector.pdf

A Brief Introduction to Rvalue References
http://www.artima.com/cppsource/rvalue.html

2013/11/01
Custom Allocator
http://blogs.msdn.com/b/vcblog/archive/2008/08/28/the-mallocator.aspx
http://stdcxx.apache.org/doc/stdlibug/15-2.html
----

Regularily Used C++ Reference Sites:

Look at SlickEdit as a cross platform editor.

Exceptions:
The hierarchy:
http://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-3.4/classstd_1_1exception.html
FAQ:
http://www.parashift.com/c++-faq-lite/exceptions.html
Wiki:
http://en.wikibooks.org/wiki/C++_Programming/Exception_Handling
Catch by reference.

Memory allocation error troubleshooting
http://msdn.microsoft.com/en-us/library/x98tx3cf.aspx

Conversion Constructors and Subtle Dangers
When you're designing a library involving C++ classes, be sure that you mark explicit 
every one-parameter (or one-non-default-parameter) constructor, 
unless you explicitly want to allow implicit conversion construction. Pretty much every 
old C++ war-horse knows to use the explicit keyword when 
defining constructors with one only (non-defaulted) parameter.  Is a subtle vulnerability 
involving conversion constructors in a particular set of circumstances. 
